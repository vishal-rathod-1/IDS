# This file was automatically generated by bifcl from /usr/src/packages/BUILD/src/analyzer/protocol/mqtt/events.bif (plugin mode).

export {
## Generated for MQTT "client requests a connection" messages
##
## c: The connection
##
## msg: MQTT connect message fields.
global mqtt_connect: event(c: connection , msg: MQTT::ConnectMsg );


## Generated for MQTT acknowledge connection messages
##
## c: The connection
##
## msg: MQTT connect ack message fields.
global mqtt_connack: event(c: connection , msg: MQTT::ConnectAckMsg );


## Generated for MQTT publish messages
##
## c: The connection
##
## is_orig: Direction in which the message was sent
##
## msg: The MQTT publish message record.
global mqtt_publish: event(c: connection , is_orig: bool , msg_id: count , msg: MQTT::PublishMsg );


## Generated for MQTT publish acknowledgement messages
##
## c: The connection
##
## is_orig: Direction in which the message was sent
##
## msg_id: The id value for the message.
global mqtt_puback: event(c: connection , is_orig: bool , msg_id: count );


## Generated for MQTT publish received messages (QoS 2 publish received, part 1)
##
## c: The connection
##
## is_orig: Direction in which the message was sent
##
## msg_id: The id value for the message.
global mqtt_pubrec: event(c: connection , is_orig: bool , msg_id: count );


## Generated for MQTT publish release messages (QoS 2 publish received, part 2)
##
## c: The connection
##
## is_orig: Direction in which the message was sent
##
## msg_id: The id value for the message.
global mqtt_pubrel: event(c: connection , is_orig: bool , msg_id: count );


## Generated for MQTT publish complete messages (QoS 2 publish received, part 3)
##
## c: The connection
##
## is_orig: Direction in which the message was sent
##
## msg_id: The id value for the message.
global mqtt_pubcomp: event(c: connection , is_orig: bool , msg_id: count );


## Generated for MQTT subscribe messages
##
## c: The connection
##
## is_orig: Direction in which the message was sent
##
## msg_id: The id value for the message.
##
## topics: The topics being subscribed to
##
## requested_qos: The desired QoS option associated with each topic.
global mqtt_subscribe: event(c: connection , msg_id: count , topics: string_vec , requested_qos: index_vec );


## Generated for MQTT subscribe messages
##
## c: The connection
##
## is_orig: Direction in which the message was sent
##
## msg_id: The id value for the message.
global mqtt_suback: event(c: connection , msg_id: count , granted_qos: count );


## Generated for MQTT unsubscribe messages sent by the client
##
## c: The connection
##
## msg_id: The id value for the message.
##
## topics: The topics being unsubscribed from
global mqtt_unsubscribe: event(c: connection , msg_id: count , topics: string_vec );


## Generated for MQTT unsubscribe acknowledgements sent by the server
##
## c: The connection
##
## msg_id: The id value for the message.
global mqtt_unsuback: event(c: connection , msg_id: count );


## Generated for MQTT ping requests sent by the client.
##
## c: The connection
global mqtt_pingreq: event(c: connection );


## Generated for MQTT ping responses sent by the server.
##
## c: The connection
global mqtt_pingresp: event(c: connection );


## Generated for MQTT disconnect messages sent by the client when it is disconnecting cleanly.
##
## c: The connection
global mqtt_disconnect: event(c: connection );

} # end of export section
module GLOBAL;
