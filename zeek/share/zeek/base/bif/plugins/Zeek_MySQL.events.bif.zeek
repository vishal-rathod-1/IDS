# This file was automatically generated by bifcl from /usr/src/packages/BUILD/src/analyzer/protocol/mysql/events.bif (plugin mode).

export {
## Generated for a command request from a MySQL client.
##
## See the MySQL `documentation <http://dev.mysql.com/doc/internals/en/client-server-protocol.html>`__
## for more information about the MySQL protocol.
##
## c: The connection.
##
## command: The numerical code of the command issued.
##
## arg: The argument for the command (empty string if not provided).
##
## .. zeek:see:: mysql_error mysql_ok mysql_server_version mysql_handshake
global mysql_command_request: event(c: connection , command: count , arg: string );


## Generated for a change user command from a MySQL client.
##
## See the MySQL `documentation <http://dev.mysql.com/doc/internals/en/client-server-protocol.html>`__
## for more information about the MySQL protocol.
##
## c: The connection.
##
## username: The username supplied by the client
##
## .. zeek:see:: mysql_error mysql_ok mysql_server_version mysql_handshake
global mysql_change_user: event(c: connection , username: string );


## Generated for an unsuccessful MySQL response.
##
## See the MySQL `documentation <http://dev.mysql.com/doc/internals/en/client-server-protocol.html>`__
## for more information about the MySQL protocol.
##
## c: The connection.
##
## code: The error code.
##
## msg: Any extra details about the error (empty string if not provided).
##
## .. zeek:see:: mysql_command_request mysql_ok mysql_server_version mysql_handshake
global mysql_error: event(c: connection , code: count , msg: string );


## Generated for a successful MySQL response.
##
## See the MySQL `documentation <http://dev.mysql.com/doc/internals/en/client-server-protocol.html>`__
## for more information about the MySQL protocol.
##
## c: The connection.
##
## affected_rows: The number of rows that were affected.
##
## .. zeek:see:: mysql_command_request mysql_error mysql_server_version mysql_handshake
global mysql_ok: event(c: connection , affected_rows: count );


## Generated for a MySQL EOF packet.
##
## See the MySQL `documentation <http://dev.mysql.com/doc/internals/en/client-server-protocol.html>`__
## for more information about the MySQL protocol.
##
## c: The connection.
##
## is_intermediate: True if this is an EOF packet between the column definition and the rows, false if a final EOF.
##
## .. zeek:see:: mysql_command_request mysql_error mysql_server_version mysql_handshake
global mysql_eof: event(c: connection , is_intermediate: bool );


## Generated for each MySQL ResultsetRow response packet.
##
## See the MySQL `documentation <http://dev.mysql.com/doc/internals/en/client-server-protocol.html>`__
## for more information about the MySQL protocol.
##
## c: The connection.
##
## row: The result row data.
##
## .. zeek:see:: mysql_command_request mysql_error mysql_server_version mysql_handshake mysql_ok
global mysql_result_row: event(c: connection , row: string_vec );


## Generated for the initial server handshake packet, which includes the MySQL server version.
##
## See the MySQL `documentation <http://dev.mysql.com/doc/internals/en/client-server-protocol.html>`__
## for more information about the MySQL protocol.
##
## c: The connection.
##
## ver: The server version string.
##
## .. zeek:see:: mysql_command_request mysql_error mysql_ok mysql_handshake
global mysql_server_version: event(c: connection , ver: string );


## Generated for a client handshake response packet, which includes the username the client is attempting
## to connect as.
##
## See the MySQL `documentation <http://dev.mysql.com/doc/internals/en/client-server-protocol.html>`__
## for more information about the MySQL protocol.
##
## c: The connection.
##
## username: The username supplied by the client
##
## .. zeek:see:: mysql_command_request mysql_error mysql_ok mysql_server_version mysql_ssl_request
global mysql_handshake: event(c: connection , username: string );


## Generated for a short client handshake response packet with the CLIENT_SSL
## flag set. Usually the client will initiate a TLS handshake afterwards.

## See the MySQL `documentation <http://dev.mysql.com/doc/internals/en/client-server-protocol.html>`__
## for more information about the MySQL protocol.
##
## c: The connection.
##
## .. zeek:see:: mysql_handshake
global mysql_ssl_request: event(c: connection );


## Generated for information about plugin authentication within handshake packets.
##
## c: The connection.
##
## is_orig: True if this is from the client, false if from the server.
##
## name: Name of the authentication plugin.
##
## data: The initial auth data. From the server, it is the concatenation of
##       auth_plugin_data_part_1 and auth_plugin_data_part_2 in the handshake.
##       For the client it is the auth_response in the handshake response.
##
## .. zeek:see:: mysql_handshake mysql_auth_switch_request mysql_auth_more_data
global mysql_auth_plugin: event(c: connection , is_orig: bool , name: string , data: string );


## Generated for a server packet with an auth switch request.
##
## c: The connection.
##
## name: The plugin name.
##
## data: Initial authentication data for the plugin.
##
## .. zeek:see:: mysql_handshake mysql_auth_more_data
global mysql_auth_switch_request: event(c: connection , name: string , data: string );


## Generated for opaque authentication data exchanged between client and server
## after the client's handshake packet, but before the server replied with
## an OK_Packet
##
## Data is specific to the plugin auth mechanism used by client and server.
##
## c: The connection.
##
## is_orig: True if this is from the client, false if from the server.
##
## data: More authentication data.
##
## .. zeek:see:: mysql_handshake mysql_auth_switch_request
global mysql_auth_more_data: event(c: connection , is_orig: bool , data: string );

} # end of export section
module GLOBAL;
