# This file was automatically generated by bifcl from /usr/src/packages/BUILD/src/zeekygen/zeekygen.bif (alternative mode).

export {


##! Functions for querying script, package, or variable documentation.



## Retrieve the Zeekygen-style comments (``##``) associated with an identifier
## (e.g. a variable or type).
##
## name: a script-level identifier for which to retrieve comments.
##
## Returns: comments associated with *name*.  If *name* is not a known
##          script-level identifier, an empty string is returned.
global get_identifier_comments: function(name: string ): string ;


## Retrieve the declaring script associated with an identifier
## (e.g. a variable or type).
##
## name: a script-level identifier
##
## Returns: declaring script associated with *name*. If *name* is not a known
##          script-level identifier, an empty string is returned.
##
## .. zeek:see:: get_record_field_declaring_script
global get_identifier_declaring_script: function(name: string ): string ;


## Retrieve the Zeekygen-style summary comments (``##!``) associated with
## a Zeek script.
##
## name: the name of a Zeek script.  It must be a relative path to where
##       it is located within a particular component of ZEEKPATH and use
##       the same file name extension/suffix as the actual file (e.g. ".zeek").
##
## Returns: summary comments associated with script with *name*.  If
##          *name* is not a known script, an empty string is returned.
global get_script_comments: function(name: string ): string ;


## Retrieve the contents of a Zeek script package's README file.
##
## name: the name of a Zeek script package.  It must be a relative path
##       to where it is located within a particular component of ZEEKPATH.
##
## Returns: contents of the package's README file.  If *name* is not a known
##          package, an empty string is returned.
global get_package_readme: function(name: string ): string ;


## Retrieve the Zeekygen-style comments (``##``) associated with a record field.
##
## name: the name of a script-level record type and a field within it formatted
##       like a typical record field access: "<record_type>$<field>".
##
## Returns: comments associated with the record field.  If *name* does
##          not point to a known script-level record type or a known field within
##          a record type, an empty string is returned.
global get_record_field_comments: function(name: string ): string ;


## Retrieve the declaring script associated with a record field.
##
## The declaring script for a field is different from the declaring script
## of the record type itself when fields were added via redef.
##
## name: the name of a script-level record type and a field within it formatted
##       like a typical record field access: "<record_type>$<field>".
##
## Returns: the declaring script associated with the record field.  If *name* does
##          not point to a known script-level record type or a known field within
##          a record type, an empty string is returned.
##
## .. zeek:see:: get_identifier_declaring_script
global get_record_field_declaring_script: function(name: string ): string ;

} # end of export section
module GLOBAL;
