// This file was automatically generated by bifcl from zeek.bif.

namespace zeek { namespace BifFunc { extern zeek::ValPtr current_time_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr network_time_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr set_network_time_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr current_event_time_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr getenv_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr setenv_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr exit_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr terminate_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr system_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr system_env_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr piped_exec_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr sleep_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr md5_hash_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr sha1_hash_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr sha256_hash_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr md5_hmac_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr md5_hash_init_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr sha1_hash_init_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr sha256_hash_init_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr md5_hash_update_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr sha1_hash_update_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr sha256_hash_update_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr md5_hash_finish_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr sha1_hash_finish_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr sha256_hash_finish_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr paraglob_init_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr paraglob_match_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr paraglob_equals_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr fnv1a32_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr fnv1a64_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr hrw_weight_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr rand_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr srand_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr syslog_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr identify_data_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr file_magic_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr find_entropy_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr entropy_test_init_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr entropy_test_add_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr entropy_test_finish_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr unique_id_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr unique_id_from_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr clear_table_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr table_values_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr table_keys_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr matching_subnets_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr filter_subnet_table_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr check_subnet_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr same_object_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr resize_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr any_set_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr all_set_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr sort_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr order_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr cat_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr cat_sep_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr fmt_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr print_raw_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr floor_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr ceil_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr sqrt_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr exp_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr ln_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr log2_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr log10_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr pow_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr current_analyzer_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr getpid_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr zeek_version_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr bare_mode_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr record_type_to_vector_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr type_name_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr type_aliases_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr enum_names_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr zeek_args_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr reading_live_traffic_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr reading_traces_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr packet_source_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr global_container_footprints_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr val_footprint_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr global_ids_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr global_options_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr lookup_ID_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr record_fields_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr do_profiling_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr is_local_interface_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr dump_rule_stats_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr zeek_is_terminating_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr gethostname_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr is_v4_addr_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr is_v6_addr_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr is_v4_subnet_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr is_v6_subnet_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr backtrace_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr routing0_data_to_addrs_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr addr_to_counts_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr counts_to_addr_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr enum_to_int_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr to_int_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr int_to_count_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr double_to_int_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr double_to_count_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr to_count_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr interval_to_double_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr count_to_double_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr int_to_double_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr time_to_double_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr double_to_time_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr double_to_interval_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr port_to_count_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr count_to_port_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr to_addr_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr is_valid_ip_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr to_subnet_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr addr_to_subnet_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr subnet_to_addr_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr subnet_width_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr to_double_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr count_to_v4_addr_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr raw_bytes_to_v4_addr_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr raw_bytes_to_v6_addr_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr to_port_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr bytestring_to_double_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr bytestring_to_float_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr bytestring_to_count_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr ptr_name_to_addr_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr addr_to_ptr_name_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr bytestring_to_hexstr_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr hexstr_to_bytestring_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr encode_base64_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr decode_base64_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr decode_base64_conn_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr uuid_to_string_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr convert_for_pattern_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr string_to_pattern_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr strftime_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr strptime_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr mask_addr_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr remask_addr_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr is_tcp_port_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr is_udp_port_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr is_icmp_port_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr get_conn_transport_proto_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr get_port_transport_proto_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr connection_exists_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr lookup_connection_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr dump_current_packet_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr get_current_packet_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr get_current_packet_header_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr get_current_packet_ts_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr dump_packet_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr lookup_addr_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr lookup_hostname_txt_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr lookup_hostname_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr haversine_distance_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr file_mode_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr lookup_connection_analyzer_id_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr disable_analyzer_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr skip_further_processing_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr set_record_packets_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr set_inactivity_timeout_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr open_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr open_for_append_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr close_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr write_file_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr set_buf_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr flush_all_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr mkdir_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr rmdir_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr unlink_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr rename_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr active_file_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr get_file_name_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr rotate_file_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr rotate_file_by_name_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr calc_next_rotate_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr file_size_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr enable_raw_output_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr install_src_addr_filter_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr install_src_net_filter_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr uninstall_src_addr_filter_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr uninstall_src_net_filter_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr install_dst_addr_filter_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr install_dst_net_filter_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr uninstall_dst_addr_filter_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr uninstall_dst_net_filter_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr is_remote_event_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr suspend_processing_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr continue_processing_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr is_processing_suspended_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr match_signatures_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr generate_all_events_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr __init_secondary_bifs_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr preserve_prefix_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr preserve_subnet_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr anonymize_addr_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr to_json_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr from_json_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr compress_path_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr is_protocol_analyzer_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr is_file_analyzer_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr is_packet_analyzer_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr enable_event_group_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr disable_event_group_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr has_event_group_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr enable_module_events_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr disable_module_events_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr has_module_events_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr have_spicy_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr have_spicy_analyzers_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr table_pattern_matcher_stats_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr find_in_zeekpath_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
