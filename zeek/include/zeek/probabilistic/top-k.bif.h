// This file was automatically generated by bifcl from /usr/src/packages/BUILD/src/probabilistic/top-k.bif (alternative mode).

#if defined(ZEEK_IN_NETVAR) || ! defined(_usr_src_packages_BUILD_build_src_probabilistic_top_k_bif)
#ifndef ZEEK_IN_NETVAR
#ifndef _usr_src_packages_BUILD_build_src_probabilistic_top_k_bif
#define _usr_src_packages_BUILD_build_src_probabilistic_top_k_bif
#include "zeek/zeek-bif.h"
#endif
#endif

namespace zeek { namespace BifFunc { extern zeek::ValPtr topk_init_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr topk_add_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr topk_get_top_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr topk_count_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr topk_epsilon_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr topk_size_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr topk_sum_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr topk_merge_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr topk_merge_prune_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }

#endif
