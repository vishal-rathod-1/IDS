// This file was automatically generated by bifcl from /usr/src/packages/BUILD/src/analyzer/analyzer.bif (alternative mode).

#if defined(ZEEK_IN_NETVAR) || ! defined(_usr_src_packages_BUILD_build_src_analyzer_analyzer_bif)
#ifndef ZEEK_IN_NETVAR
#ifndef _usr_src_packages_BUILD_build_src_analyzer_analyzer_bif
#define _usr_src_packages_BUILD_build_src_analyzer_analyzer_bif
#include "zeek/zeek-bif.h"
#endif
#endif

namespace zeek { namespace BifFunc { namespace Analyzer { extern zeek::ValPtr __enable_analyzer_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Analyzer { extern zeek::ValPtr __disable_analyzer_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Analyzer { extern zeek::ValPtr __disable_all_analyzers_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Analyzer { extern zeek::ValPtr __register_for_port_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Analyzer { extern zeek::ValPtr __schedule_analyzer_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Analyzer { extern zeek::ValPtr __name_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Analyzer { extern zeek::ValPtr __tag_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Analyzer { extern zeek::ValPtr __has_tag_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }

#endif
