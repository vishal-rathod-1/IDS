// This file was automatically generated by bifcl from /usr/src/packages/BUILD/src/analyzer/protocol/snmp/events.bif (plugin mode).

#if defined(ZEEK_IN_NETVAR) || ! defined(_usr_src_packages_BUILD_build_src_analyzer_protocol_snmp_events_bif)
#ifndef ZEEK_IN_NETVAR
#ifndef _usr_src_packages_BUILD_build_src_analyzer_protocol_snmp_events_bif
#define _usr_src_packages_BUILD_build_src_analyzer_protocol_snmp_events_bif
#include "zeek/zeek-bif.h"
#endif
#endif

extern zeek::EventHandlerPtr snmp_get_request; 
namespace zeek { namespace BifEvent {  void enqueue_snmp_get_request(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek::IntrusivePtr<zeek::Val> header, zeek::IntrusivePtr<zeek::Val> pdu);  }  }
extern zeek::EventHandlerPtr snmp_get_next_request; 
namespace zeek { namespace BifEvent {  void enqueue_snmp_get_next_request(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek::IntrusivePtr<zeek::Val> header, zeek::IntrusivePtr<zeek::Val> pdu);  }  }
extern zeek::EventHandlerPtr snmp_response; 
namespace zeek { namespace BifEvent {  void enqueue_snmp_response(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek::IntrusivePtr<zeek::Val> header, zeek::IntrusivePtr<zeek::Val> pdu);  }  }
extern zeek::EventHandlerPtr snmp_set_request; 
namespace zeek { namespace BifEvent {  void enqueue_snmp_set_request(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek::IntrusivePtr<zeek::Val> header, zeek::IntrusivePtr<zeek::Val> pdu);  }  }
extern zeek::EventHandlerPtr snmp_trap; 
namespace zeek { namespace BifEvent {  void enqueue_snmp_trap(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek::IntrusivePtr<zeek::Val> header, zeek::IntrusivePtr<zeek::Val> pdu);  }  }
extern zeek::EventHandlerPtr snmp_get_bulk_request; 
namespace zeek { namespace BifEvent {  void enqueue_snmp_get_bulk_request(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek::IntrusivePtr<zeek::Val> header, zeek::IntrusivePtr<zeek::Val> pdu);  }  }
extern zeek::EventHandlerPtr snmp_inform_request; 
namespace zeek { namespace BifEvent {  void enqueue_snmp_inform_request(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek::IntrusivePtr<zeek::Val> header, zeek::IntrusivePtr<zeek::Val> pdu);  }  }
extern zeek::EventHandlerPtr snmp_trapV2; 
namespace zeek { namespace BifEvent {  void enqueue_snmp_trapV2(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek::IntrusivePtr<zeek::Val> header, zeek::IntrusivePtr<zeek::Val> pdu);  }  }
extern zeek::EventHandlerPtr snmp_report; 
namespace zeek { namespace BifEvent {  void enqueue_snmp_report(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek::IntrusivePtr<zeek::Val> header, zeek::IntrusivePtr<zeek::Val> pdu);  }  }
extern zeek::EventHandlerPtr snmp_unknown_pdu; 
namespace zeek { namespace BifEvent {  void enqueue_snmp_unknown_pdu(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek::IntrusivePtr<zeek::Val> header, zeek_uint_t tag);  }  }
extern zeek::EventHandlerPtr snmp_unknown_scoped_pdu; 
namespace zeek { namespace BifEvent {  void enqueue_snmp_unknown_scoped_pdu(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek::IntrusivePtr<zeek::Val> header, zeek_uint_t tag);  }  }
extern zeek::EventHandlerPtr snmp_encrypted_pdu; 
namespace zeek { namespace BifEvent {  void enqueue_snmp_encrypted_pdu(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek::IntrusivePtr<zeek::Val> header);  }  }
extern zeek::EventHandlerPtr snmp_unknown_header_version; 
namespace zeek { namespace BifEvent {  void enqueue_snmp_unknown_header_version(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t version);  }  }

#endif
