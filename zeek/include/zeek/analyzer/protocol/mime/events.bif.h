// This file was automatically generated by bifcl from /usr/src/packages/BUILD/src/analyzer/protocol/mime/events.bif (plugin mode).

#if defined(ZEEK_IN_NETVAR) || ! defined(_usr_src_packages_BUILD_build_src_analyzer_protocol_mime_events_bif)
#ifndef ZEEK_IN_NETVAR
#ifndef _usr_src_packages_BUILD_build_src_analyzer_protocol_mime_events_bif
#define _usr_src_packages_BUILD_build_src_analyzer_protocol_mime_events_bif
#include "zeek/zeek-bif.h"
#endif
#endif

extern zeek::EventHandlerPtr mime_begin_entity; 
namespace zeek { namespace BifEvent {  void enqueue_mime_begin_entity(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c);  }  }
extern zeek::EventHandlerPtr mime_end_entity; 
namespace zeek { namespace BifEvent {  void enqueue_mime_end_entity(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c);  }  }
extern zeek::EventHandlerPtr mime_one_header; 
namespace zeek { namespace BifEvent {  void enqueue_mime_one_header(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek::IntrusivePtr<zeek::Val> h);  }  }
extern zeek::EventHandlerPtr mime_all_headers; 
namespace zeek { namespace BifEvent {  void enqueue_mime_all_headers(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek::IntrusivePtr<zeek::Val> hlist);  }  }
extern zeek::EventHandlerPtr mime_segment_data; 
namespace zeek { namespace BifEvent {  void enqueue_mime_segment_data(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek_uint_t length, zeek::IntrusivePtr<zeek::StringVal> data);  }  }
extern zeek::EventHandlerPtr mime_entity_data; 
namespace zeek { namespace BifEvent {  void enqueue_mime_entity_data(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek_uint_t length, zeek::IntrusivePtr<zeek::StringVal> data);  }  }
extern zeek::EventHandlerPtr mime_all_data; 
namespace zeek { namespace BifEvent {  void enqueue_mime_all_data(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek_uint_t length, zeek::IntrusivePtr<zeek::StringVal> data);  }  }
extern zeek::EventHandlerPtr mime_event; 
namespace zeek { namespace BifEvent {  void enqueue_mime_event(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek::IntrusivePtr<zeek::StringVal> event_type, zeek::IntrusivePtr<zeek::StringVal> detail);  }  }
extern zeek::EventHandlerPtr mime_content_hash; 
namespace zeek { namespace BifEvent {  void enqueue_mime_content_hash(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek_uint_t content_len, zeek::IntrusivePtr<zeek::StringVal> hash_value);  }  }

#endif
