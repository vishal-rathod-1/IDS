// This file was automatically generated by bifcl from /usr/src/packages/BUILD/src/analyzer/protocol/rfb/events.bif (plugin mode).

#if defined(ZEEK_IN_NETVAR) || ! defined(_usr_src_packages_BUILD_build_src_analyzer_protocol_rfb_events_bif)
#ifndef ZEEK_IN_NETVAR
#ifndef _usr_src_packages_BUILD_build_src_analyzer_protocol_rfb_events_bif
#define _usr_src_packages_BUILD_build_src_analyzer_protocol_rfb_events_bif
#include "zeek/zeek-bif.h"
#endif
#endif

extern zeek::EventHandlerPtr rfb_authentication_type; 
namespace zeek { namespace BifEvent {  void enqueue_rfb_authentication_type(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek_uint_t authtype);  }  }
extern zeek::EventHandlerPtr rfb_auth_result; 
namespace zeek { namespace BifEvent {  void enqueue_rfb_auth_result(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int result);  }  }
extern zeek::EventHandlerPtr rfb_share_flag; 
namespace zeek { namespace BifEvent {  void enqueue_rfb_share_flag(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int flag);  }  }
extern zeek::EventHandlerPtr rfb_client_version; 
namespace zeek { namespace BifEvent {  void enqueue_rfb_client_version(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek::IntrusivePtr<zeek::StringVal> major_version, zeek::IntrusivePtr<zeek::StringVal> minor_version);  }  }
extern zeek::EventHandlerPtr rfb_server_version; 
namespace zeek { namespace BifEvent {  void enqueue_rfb_server_version(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek::IntrusivePtr<zeek::StringVal> major_version, zeek::IntrusivePtr<zeek::StringVal> minor_version);  }  }
extern zeek::EventHandlerPtr rfb_server_parameters; 
namespace zeek { namespace BifEvent {  void enqueue_rfb_server_parameters(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek::IntrusivePtr<zeek::StringVal> name, zeek_uint_t width, zeek_uint_t height);  }  }

#endif
