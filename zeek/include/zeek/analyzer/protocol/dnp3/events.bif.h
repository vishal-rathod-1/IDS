// This file was automatically generated by bifcl from /usr/src/packages/BUILD/src/analyzer/protocol/dnp3/events.bif (plugin mode).

#if defined(ZEEK_IN_NETVAR) || ! defined(_usr_src_packages_BUILD_build_src_analyzer_protocol_dnp3_events_bif)
#ifndef ZEEK_IN_NETVAR
#ifndef _usr_src_packages_BUILD_build_src_analyzer_protocol_dnp3_events_bif
#define _usr_src_packages_BUILD_build_src_analyzer_protocol_dnp3_events_bif
#include "zeek/zeek-bif.h"
#endif
#endif

extern zeek::EventHandlerPtr dnp3_application_request_header; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_application_request_header(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t application, zeek_uint_t fc);  }  }
extern zeek::EventHandlerPtr dnp3_application_response_header; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_application_response_header(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t application, zeek_uint_t fc, zeek_uint_t iin);  }  }
extern zeek::EventHandlerPtr dnp3_object_header; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_object_header(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t obj_type, zeek_uint_t qua_field, zeek_uint_t number, zeek_uint_t rf_low, zeek_uint_t rf_high);  }  }
extern zeek::EventHandlerPtr dnp3_object_prefix; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_object_prefix(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t prefix_value);  }  }
extern zeek::EventHandlerPtr dnp3_header_block; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_header_block(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t len, zeek_uint_t ctrl, zeek_uint_t dest_addr, zeek_uint_t src_addr);  }  }
extern zeek::EventHandlerPtr dnp3_response_data_object; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_response_data_object(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t data_value);  }  }
extern zeek::EventHandlerPtr dnp3_attribute_common; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_attribute_common(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t data_type_code, zeek_uint_t leng, zeek::IntrusivePtr<zeek::StringVal> attribute_obj);  }  }
extern zeek::EventHandlerPtr dnp3_crob; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_crob(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t control_code, zeek_uint_t count8, zeek_uint_t on_time, zeek_uint_t off_time, zeek_uint_t status_code);  }  }
extern zeek::EventHandlerPtr dnp3_pcb; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_pcb(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t control_code, zeek_uint_t count8, zeek_uint_t on_time, zeek_uint_t off_time, zeek_uint_t status_code);  }  }
extern zeek::EventHandlerPtr dnp3_counter_32wFlag; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_counter_32wFlag(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t count_value);  }  }
extern zeek::EventHandlerPtr dnp3_counter_16wFlag; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_counter_16wFlag(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t count_value);  }  }
extern zeek::EventHandlerPtr dnp3_counter_32woFlag; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_counter_32woFlag(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t count_value);  }  }
extern zeek::EventHandlerPtr dnp3_counter_16woFlag; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_counter_16woFlag(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t count_value);  }  }
extern zeek::EventHandlerPtr dnp3_frozen_counter_32wFlag; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_frozen_counter_32wFlag(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t count_value);  }  }
extern zeek::EventHandlerPtr dnp3_frozen_counter_16wFlag; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_frozen_counter_16wFlag(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t count_value);  }  }
extern zeek::EventHandlerPtr dnp3_frozen_counter_32wFlagTime; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_frozen_counter_32wFlagTime(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t count_value, zeek_uint_t time48);  }  }
extern zeek::EventHandlerPtr dnp3_frozen_counter_16wFlagTime; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_frozen_counter_16wFlagTime(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t count_value, zeek_uint_t time48);  }  }
extern zeek::EventHandlerPtr dnp3_frozen_counter_32woFlag; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_frozen_counter_32woFlag(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t count_value);  }  }
extern zeek::EventHandlerPtr dnp3_frozen_counter_16woFlag; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_frozen_counter_16woFlag(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t count_value);  }  }
extern zeek::EventHandlerPtr dnp3_analog_input_32wFlag; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_analog_input_32wFlag(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t value);  }  }
extern zeek::EventHandlerPtr dnp3_analog_input_16wFlag; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_analog_input_16wFlag(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t value);  }  }
extern zeek::EventHandlerPtr dnp3_analog_input_32woFlag; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_analog_input_32woFlag(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t value);  }  }
extern zeek::EventHandlerPtr dnp3_analog_input_16woFlag; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_analog_input_16woFlag(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t value);  }  }
extern zeek::EventHandlerPtr dnp3_analog_input_SPwFlag; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_analog_input_SPwFlag(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t value);  }  }
extern zeek::EventHandlerPtr dnp3_analog_input_DPwFlag; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_analog_input_DPwFlag(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t value_low, zeek_uint_t value_high);  }  }
extern zeek::EventHandlerPtr dnp3_frozen_analog_input_32wFlag; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_frozen_analog_input_32wFlag(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t frozen_value);  }  }
extern zeek::EventHandlerPtr dnp3_frozen_analog_input_16wFlag; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_frozen_analog_input_16wFlag(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t frozen_value);  }  }
extern zeek::EventHandlerPtr dnp3_frozen_analog_input_32wTime; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_frozen_analog_input_32wTime(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t frozen_value, zeek_uint_t time48);  }  }
extern zeek::EventHandlerPtr dnp3_frozen_analog_input_16wTime; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_frozen_analog_input_16wTime(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t frozen_value, zeek_uint_t time48);  }  }
extern zeek::EventHandlerPtr dnp3_frozen_analog_input_32woFlag; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_frozen_analog_input_32woFlag(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t frozen_value);  }  }
extern zeek::EventHandlerPtr dnp3_frozen_analog_input_16woFlag; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_frozen_analog_input_16woFlag(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t frozen_value);  }  }
extern zeek::EventHandlerPtr dnp3_frozen_analog_input_SPwFlag; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_frozen_analog_input_SPwFlag(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t frozen_value);  }  }
extern zeek::EventHandlerPtr dnp3_frozen_analog_input_DPwFlag; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_frozen_analog_input_DPwFlag(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t frozen_value_low, zeek_uint_t frozen_value_high);  }  }
extern zeek::EventHandlerPtr dnp3_analog_input_event_32woTime; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_analog_input_event_32woTime(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t value);  }  }
extern zeek::EventHandlerPtr dnp3_analog_input_event_16woTime; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_analog_input_event_16woTime(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t value);  }  }
extern zeek::EventHandlerPtr dnp3_analog_input_event_32wTime; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_analog_input_event_32wTime(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t value, zeek_uint_t time48);  }  }
extern zeek::EventHandlerPtr dnp3_analog_input_event_16wTime; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_analog_input_event_16wTime(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t value, zeek_uint_t time48);  }  }
extern zeek::EventHandlerPtr dnp3_analog_input_event_SPwoTime; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_analog_input_event_SPwoTime(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t value);  }  }
extern zeek::EventHandlerPtr dnp3_analog_input_event_DPwoTime; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_analog_input_event_DPwoTime(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t value_low, zeek_uint_t value_high);  }  }
extern zeek::EventHandlerPtr dnp3_analog_input_event_SPwTime; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_analog_input_event_SPwTime(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t value, zeek_uint_t time48);  }  }
extern zeek::EventHandlerPtr dnp3_analog_input_event_DPwTime; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_analog_input_event_DPwTime(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t value_low, zeek_uint_t value_high, zeek_uint_t time48);  }  }
extern zeek::EventHandlerPtr dnp3_frozen_analog_input_event_32woTime; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_frozen_analog_input_event_32woTime(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t frozen_value);  }  }
extern zeek::EventHandlerPtr dnp3_frozen_analog_input_event_16woTime; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_frozen_analog_input_event_16woTime(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t frozen_value);  }  }
extern zeek::EventHandlerPtr dnp3_frozen_analog_input_event_32wTime; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_frozen_analog_input_event_32wTime(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t frozen_value, zeek_uint_t time48);  }  }
extern zeek::EventHandlerPtr dnp3_frozen_analog_input_event_16wTime; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_frozen_analog_input_event_16wTime(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t frozen_value, zeek_uint_t time48);  }  }
extern zeek::EventHandlerPtr dnp3_frozen_analog_input_event_SPwoTime; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_frozen_analog_input_event_SPwoTime(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t frozen_value);  }  }
extern zeek::EventHandlerPtr dnp3_frozen_analog_input_event_DPwoTime; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_frozen_analog_input_event_DPwoTime(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t frozen_value_low, zeek_uint_t frozen_value_high);  }  }
extern zeek::EventHandlerPtr dnp3_frozen_analog_input_event_SPwTime; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_frozen_analog_input_event_SPwTime(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t frozen_value, zeek_uint_t time48);  }  }
extern zeek::EventHandlerPtr dnp3_frozen_analog_input_event_DPwTime; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_frozen_analog_input_event_DPwTime(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t flag, zeek_uint_t frozen_value_low, zeek_uint_t frozen_value_high, zeek_uint_t time48);  }  }
extern zeek::EventHandlerPtr dnp3_file_transport; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_file_transport(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t file_handle, zeek_uint_t block_num, zeek::IntrusivePtr<zeek::StringVal> file_data);  }  }
extern zeek::EventHandlerPtr dnp3_debug_byte; 
namespace zeek { namespace BifEvent {  void enqueue_dnp3_debug_byte(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek::IntrusivePtr<zeek::StringVal> debug);  }  }

#endif
