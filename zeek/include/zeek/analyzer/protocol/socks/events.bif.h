// This file was automatically generated by bifcl from /usr/src/packages/BUILD/src/analyzer/protocol/socks/events.bif (plugin mode).

#if defined(ZEEK_IN_NETVAR) || ! defined(_usr_src_packages_BUILD_build_src_analyzer_protocol_socks_events_bif)
#ifndef ZEEK_IN_NETVAR
#ifndef _usr_src_packages_BUILD_build_src_analyzer_protocol_socks_events_bif
#define _usr_src_packages_BUILD_build_src_analyzer_protocol_socks_events_bif
#include "zeek/zeek-bif.h"
#endif
#endif

extern zeek::EventHandlerPtr socks_request; 
namespace zeek { namespace BifEvent {  void enqueue_socks_request(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek_uint_t version, zeek_uint_t request_type, zeek::IntrusivePtr<zeek::Val> sa, zeek::IntrusivePtr<zeek::PortVal> p, zeek::IntrusivePtr<zeek::StringVal> user);  }  }
extern zeek::EventHandlerPtr socks_reply; 
namespace zeek { namespace BifEvent {  void enqueue_socks_reply(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek_uint_t version, zeek_uint_t reply, zeek::IntrusivePtr<zeek::Val> sa, zeek::IntrusivePtr<zeek::PortVal> p);  }  }
extern zeek::EventHandlerPtr socks_login_userpass_request; 
namespace zeek { namespace BifEvent {  void enqueue_socks_login_userpass_request(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek::IntrusivePtr<zeek::StringVal> user, zeek::IntrusivePtr<zeek::StringVal> password);  }  }
extern zeek::EventHandlerPtr socks_login_userpass_reply; 
namespace zeek { namespace BifEvent {  void enqueue_socks_login_userpass_reply(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek_uint_t code);  }  }

#endif
