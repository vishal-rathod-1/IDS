// This file was automatically generated by bifcl from /usr/src/packages/BUILD/src/analyzer/protocol/login/events.bif (plugin mode).

#if defined(ZEEK_IN_NETVAR) || ! defined(_usr_src_packages_BUILD_build_src_analyzer_protocol_login_events_bif)
#ifndef ZEEK_IN_NETVAR
#ifndef _usr_src_packages_BUILD_build_src_analyzer_protocol_login_events_bif
#define _usr_src_packages_BUILD_build_src_analyzer_protocol_login_events_bif
#include "zeek/zeek-bif.h"
#endif
#endif

extern zeek::EventHandlerPtr rsh_request; 
namespace zeek { namespace BifEvent {  void enqueue_rsh_request(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek::IntrusivePtr<zeek::StringVal> client_user, zeek::IntrusivePtr<zeek::StringVal> server_user, zeek::IntrusivePtr<zeek::StringVal> line, int new_session);  }  }
extern zeek::EventHandlerPtr rsh_reply; 
namespace zeek { namespace BifEvent {  void enqueue_rsh_reply(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek::IntrusivePtr<zeek::StringVal> client_user, zeek::IntrusivePtr<zeek::StringVal> server_user, zeek::IntrusivePtr<zeek::StringVal> line);  }  }
extern zeek::EventHandlerPtr login_failure; 
namespace zeek { namespace BifEvent {  void enqueue_login_failure(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek::IntrusivePtr<zeek::StringVal> user, zeek::IntrusivePtr<zeek::StringVal> client_user, zeek::IntrusivePtr<zeek::StringVal> password, zeek::IntrusivePtr<zeek::StringVal> line);  }  }
extern zeek::EventHandlerPtr login_success; 
namespace zeek { namespace BifEvent {  void enqueue_login_success(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek::IntrusivePtr<zeek::StringVal> user, zeek::IntrusivePtr<zeek::StringVal> client_user, zeek::IntrusivePtr<zeek::StringVal> password, zeek::IntrusivePtr<zeek::StringVal> line);  }  }
extern zeek::EventHandlerPtr login_input_line; 
namespace zeek { namespace BifEvent {  void enqueue_login_input_line(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek::IntrusivePtr<zeek::StringVal> line);  }  }
extern zeek::EventHandlerPtr login_output_line; 
namespace zeek { namespace BifEvent {  void enqueue_login_output_line(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek::IntrusivePtr<zeek::StringVal> line);  }  }
extern zeek::EventHandlerPtr login_confused; 
namespace zeek { namespace BifEvent {  void enqueue_login_confused(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek::IntrusivePtr<zeek::StringVal> msg, zeek::IntrusivePtr<zeek::StringVal> line);  }  }
extern zeek::EventHandlerPtr login_confused_text; 
namespace zeek { namespace BifEvent {  void enqueue_login_confused_text(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek::IntrusivePtr<zeek::StringVal> line);  }  }
extern zeek::EventHandlerPtr login_terminal; 
namespace zeek { namespace BifEvent {  void enqueue_login_terminal(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek::IntrusivePtr<zeek::StringVal> terminal);  }  }
extern zeek::EventHandlerPtr login_display; 
namespace zeek { namespace BifEvent {  void enqueue_login_display(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek::IntrusivePtr<zeek::StringVal> display);  }  }
extern zeek::EventHandlerPtr authentication_accepted; 
namespace zeek { namespace BifEvent {  void enqueue_authentication_accepted(zeek::analyzer::Analyzer* analyzer, zeek::IntrusivePtr<zeek::StringVal> name, zeek::Connection* c);  }  }
extern zeek::EventHandlerPtr authentication_rejected; 
namespace zeek { namespace BifEvent {  void enqueue_authentication_rejected(zeek::analyzer::Analyzer* analyzer, zeek::IntrusivePtr<zeek::StringVal> name, zeek::Connection* c);  }  }
extern zeek::EventHandlerPtr authentication_skipped; 
namespace zeek { namespace BifEvent {  void enqueue_authentication_skipped(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c);  }  }
extern zeek::EventHandlerPtr login_prompt; 
namespace zeek { namespace BifEvent {  void enqueue_login_prompt(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek::IntrusivePtr<zeek::StringVal> prompt);  }  }
extern zeek::EventHandlerPtr activating_encryption; 
namespace zeek { namespace BifEvent {  void enqueue_activating_encryption(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c);  }  }
extern zeek::EventHandlerPtr inconsistent_option; 
namespace zeek { namespace BifEvent {  void enqueue_inconsistent_option(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c);  }  }
extern zeek::EventHandlerPtr bad_option; 
namespace zeek { namespace BifEvent {  void enqueue_bad_option(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c);  }  }
extern zeek::EventHandlerPtr bad_option_termination; 
namespace zeek { namespace BifEvent {  void enqueue_bad_option_termination(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c);  }  }

#endif
