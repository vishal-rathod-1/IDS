// This file was automatically generated by bifcl from /usr/src/packages/BUILD/src/analyzer/protocol/dce-rpc/types.bif (plugin mode).

#if defined(ZEEK_IN_NETVAR) || ! defined(_usr_src_packages_BUILD_build_src_analyzer_protocol_dce_rpc_types_bif)
#ifndef ZEEK_IN_NETVAR
#ifndef _usr_src_packages_BUILD_build_src_analyzer_protocol_dce_rpc_types_bif
#define _usr_src_packages_BUILD_build_src_analyzer_protocol_dce_rpc_types_bif
#include "zeek/zeek-bif.h"
#endif
#endif

namespace BifEnum { namespace DCE_RPC { enum PType {
	REQUEST,
	PING,
	RESPONSE,
	FAULT,
	WORKING,
	NOCALL,
	REJECT,
	ACK,
	CL_CANCEL,
	FACK,
	CANCEL_ACK,
	BIND,
	BIND_ACK,
	BIND_NAK,
	ALTER_CONTEXT,
	ALTER_CONTEXT_RESP,
	AUTH3,
	SHUTDOWN,
	CO_CANCEL,
	ORPHANED,
	RTS,
}; } }
namespace zeek { namespace BifType { namespace Enum{ namespace DCE_RPC {  extern zeek::IntrusivePtr<zeek::EnumType> PType;  } } }}
namespace BifEnum { namespace DCE_RPC { enum IfID {
	unknown_if,
	epmapper,
	lsarpc,
	lsa_ds,
	mgmt,
	netlogon,
	samr,
	srvsvc,
	spoolss,
	drs,
	winspipe,
	wkssvc,
	oxid,
	ISCMActivator,
}; } }
namespace zeek { namespace BifType { namespace Enum{ namespace DCE_RPC {  extern zeek::IntrusivePtr<zeek::EnumType> IfID;  } } }}

#endif
