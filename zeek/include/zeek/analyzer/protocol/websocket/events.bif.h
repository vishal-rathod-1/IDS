// This file was automatically generated by bifcl from /usr/src/packages/BUILD/src/analyzer/protocol/websocket/events.bif (plugin mode).

#if defined(ZEEK_IN_NETVAR) || ! defined(_usr_src_packages_BUILD_build_src_analyzer_protocol_websocket_events_bif)
#ifndef ZEEK_IN_NETVAR
#ifndef _usr_src_packages_BUILD_build_src_analyzer_protocol_websocket_events_bif
#define _usr_src_packages_BUILD_build_src_analyzer_protocol_websocket_events_bif
#include "zeek/zeek-bif.h"
#endif
#endif

extern zeek::EventHandlerPtr websocket_established; 
namespace zeek { namespace BifEvent {  void enqueue_websocket_established(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, zeek_uint_t aid);  }  }
extern zeek::EventHandlerPtr websocket_frame; 
namespace zeek { namespace BifEvent {  void enqueue_websocket_frame(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, int fin, zeek_uint_t rsv, zeek_uint_t opcode, zeek_uint_t payload_len);  }  }
extern zeek::EventHandlerPtr websocket_frame_data; 
namespace zeek { namespace BifEvent {  void enqueue_websocket_frame_data(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek::IntrusivePtr<zeek::StringVal> data);  }  }
extern zeek::EventHandlerPtr websocket_message; 
namespace zeek { namespace BifEvent {  void enqueue_websocket_message(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t opcode);  }  }
extern zeek::EventHandlerPtr websocket_close; 
namespace zeek { namespace BifEvent {  void enqueue_websocket_close(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek_uint_t status, zeek::IntrusivePtr<zeek::StringVal> reason);  }  }

#endif
