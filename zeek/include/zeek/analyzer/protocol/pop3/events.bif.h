// This file was automatically generated by bifcl from /usr/src/packages/BUILD/src/analyzer/protocol/pop3/events.bif (plugin mode).

#if defined(ZEEK_IN_NETVAR) || ! defined(_usr_src_packages_BUILD_build_src_analyzer_protocol_pop3_events_bif)
#ifndef ZEEK_IN_NETVAR
#ifndef _usr_src_packages_BUILD_build_src_analyzer_protocol_pop3_events_bif
#define _usr_src_packages_BUILD_build_src_analyzer_protocol_pop3_events_bif
#include "zeek/zeek-bif.h"
#endif
#endif

extern zeek::EventHandlerPtr pop3_request; 
namespace zeek { namespace BifEvent {  void enqueue_pop3_request(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek::IntrusivePtr<zeek::StringVal> command, zeek::IntrusivePtr<zeek::StringVal> arg);  }  }
extern zeek::EventHandlerPtr pop3_reply; 
namespace zeek { namespace BifEvent {  void enqueue_pop3_reply(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek::IntrusivePtr<zeek::StringVal> cmd, zeek::IntrusivePtr<zeek::StringVal> msg);  }  }
extern zeek::EventHandlerPtr pop3_data; 
namespace zeek { namespace BifEvent {  void enqueue_pop3_data(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek::IntrusivePtr<zeek::StringVal> data);  }  }
extern zeek::EventHandlerPtr pop3_unexpected; 
namespace zeek { namespace BifEvent {  void enqueue_pop3_unexpected(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek::IntrusivePtr<zeek::StringVal> msg, zeek::IntrusivePtr<zeek::StringVal> detail);  }  }
extern zeek::EventHandlerPtr pop3_starttls; 
namespace zeek { namespace BifEvent {  void enqueue_pop3_starttls(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c);  }  }
extern zeek::EventHandlerPtr pop3_login_success; 
namespace zeek { namespace BifEvent {  void enqueue_pop3_login_success(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek::IntrusivePtr<zeek::StringVal> user, zeek::IntrusivePtr<zeek::StringVal> password);  }  }
extern zeek::EventHandlerPtr pop3_login_failure; 
namespace zeek { namespace BifEvent {  void enqueue_pop3_login_failure(zeek::analyzer::Analyzer* analyzer, zeek::Connection* c, int is_orig, zeek::IntrusivePtr<zeek::StringVal> user, zeek::IntrusivePtr<zeek::StringVal> password);  }  }

#endif
