// This file was automatically generated by bifcl from /usr/src/packages/BUILD/src/cluster/cluster.bif (alternative mode).

#if defined(ZEEK_IN_NETVAR) || ! defined(_usr_src_packages_BUILD_build_src_cluster_cluster_bif)
#ifndef ZEEK_IN_NETVAR
#ifndef _usr_src_packages_BUILD_build_src_cluster_cluster_bif
#define _usr_src_packages_BUILD_build_src_cluster_cluster_bif
#include "zeek/zeek-bif.h"
#endif
#endif

namespace zeek { namespace BifType { namespace Record{ namespace Cluster {  extern zeek::IntrusivePtr<zeek::RecordType> Event;  } } }}
namespace zeek { namespace BifFunc { namespace Cluster { extern zeek::ValPtr publish_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Cluster { extern zeek::ValPtr make_event_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Cluster { extern zeek::ValPtr __subscribe_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Cluster { extern zeek::ValPtr __unsubscribe_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Cluster::Backend { extern zeek::ValPtr __init_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifType { namespace Record{ namespace Cluster {  extern zeek::IntrusivePtr<zeek::RecordType> Pool;  } } }}
namespace zeek { namespace BifFunc { namespace Cluster { extern zeek::ValPtr publish_rr_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Cluster { extern zeek::ValPtr publish_hrw_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }

#endif
