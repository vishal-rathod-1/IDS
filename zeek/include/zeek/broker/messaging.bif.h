// This file was automatically generated by bifcl from /usr/src/packages/BUILD/src/broker/messaging.bif (alternative mode).

#if defined(ZEEK_IN_NETVAR) || ! defined(_usr_src_packages_BUILD_build_src_broker_messaging_bif)
#ifndef ZEEK_IN_NETVAR
#ifndef _usr_src_packages_BUILD_build_src_broker_messaging_bif
#define _usr_src_packages_BUILD_build_src_broker_messaging_bif
#include "zeek/zeek-bif.h"
#endif
#endif

namespace zeek { namespace BifType { namespace Record{ namespace Broker {  extern zeek::IntrusivePtr<zeek::RecordType> Event;  } } }}
namespace zeek { namespace BifFunc { namespace Broker { extern zeek::ValPtr make_event_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Broker { extern zeek::ValPtr publish_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Broker { extern zeek::ValPtr __flush_logs_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Broker { extern zeek::ValPtr __publish_id_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Broker { extern zeek::ValPtr __auto_publish_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Broker { extern zeek::ValPtr __auto_unpublish_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Broker { extern zeek::ValPtr __subscribe_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Broker { extern zeek::ValPtr __forward_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Broker { extern zeek::ValPtr __unsubscribe_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }

#endif
