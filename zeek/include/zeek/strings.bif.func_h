// This file was automatically generated by bifcl from strings.bif.

namespace zeek { namespace BifFunc { extern zeek::ValPtr levenshtein_distance_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr string_cat_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr join_string_vec_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr join_string_set_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr edit_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr sub_bytes_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr split_string_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr split_string1_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr split_string_all_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr split_string_n_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr sub_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr gsub_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr strcmp_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr strstr_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr subst_string_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr to_lower_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr to_upper_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr clean_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr to_string_literal_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr is_ascii_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr escape_string_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr string_to_ascii_hex_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr str_smith_waterman_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr str_split_indices_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr strip_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr lstrip_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr rstrip_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr string_fill_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr safe_shell_quote_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr find_all_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr find_all_ordered_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr find_last_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr hexdump_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr reverse_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr count_substr_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr find_str_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr rfind_str_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr starts_with_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr ends_with_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr is_num_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr is_alpha_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr is_alnum_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr ljust_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr rjust_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr swap_case_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr to_title_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr zfill_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr remove_prefix_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
namespace zeek { namespace BifFunc { extern zeek::ValPtr remove_suffix_bif(zeek::detail::Frame* frame, const zeek::Args*); }  }
