// This file was automatically generated by bifcl from /usr/src/packages/BUILD/src/logging/logging.bif (alternative mode).

#if defined(ZEEK_IN_NETVAR) || ! defined(_usr_src_packages_BUILD_build_src_logging_logging_bif)
#ifndef ZEEK_IN_NETVAR
#ifndef _usr_src_packages_BUILD_build_src_logging_logging_bif
#define _usr_src_packages_BUILD_build_src_logging_logging_bif
#include "zeek/zeek-bif.h"
#endif
#endif

namespace zeek { namespace BifType { namespace Record{ namespace Log {  extern zeek::IntrusivePtr<zeek::RecordType> Filter;  } } }}
namespace zeek { namespace BifType { namespace Record{ namespace Log {  extern zeek::IntrusivePtr<zeek::RecordType> Stream;  } } }}
namespace zeek { namespace BifType { namespace Record{ namespace Log {  extern zeek::IntrusivePtr<zeek::RecordType> RotationInfo;  } } }}
namespace zeek { namespace BifType { namespace Record{ namespace Log {  extern zeek::IntrusivePtr<zeek::RecordType> RotationFmtInfo;  } } }}
namespace BifEnum { namespace Log { enum PrintLogType {
	REDIRECT_NONE,
	REDIRECT_STDOUT,
	REDIRECT_ALL,
}; } }
namespace zeek { namespace BifType { namespace Enum{ namespace Log {  extern zeek::IntrusivePtr<zeek::EnumType> PrintLogType;  } } }}
namespace zeek { namespace BifFunc { namespace Log { extern zeek::ValPtr __create_stream_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Log { extern zeek::ValPtr __remove_stream_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Log { extern zeek::ValPtr __enable_stream_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Log { extern zeek::ValPtr __disable_stream_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Log { extern zeek::ValPtr __add_filter_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Log { extern zeek::ValPtr __remove_filter_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Log { extern zeek::ValPtr __write_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Log { extern zeek::ValPtr __set_buf_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Log { extern zeek::ValPtr __flush_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Log { extern zeek::ValPtr __delay_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Log { extern zeek::ValPtr __delay_finish_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Log { extern zeek::ValPtr __set_max_delay_interval_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Log { extern zeek::ValPtr __set_max_delay_queue_size_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }
namespace zeek { namespace BifFunc { namespace Log { extern zeek::ValPtr __get_delay_queue_size_bif(zeek::detail::Frame* frame, const zeek::Args*); }  } }

#endif
